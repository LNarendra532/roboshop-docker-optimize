
# ---------- Builder Stage ----------
# Stage 1: Build
FROM python:3.9.23-alpine3.22 AS builder
WORKDIR /build
# Install build dependencies
RUN apk add --no-cache python3-dev build-base linux-headers pcre-dev
COPY requirements.txt .
RUN pip3 install --no-cache-dir --prefix=/install -r requirements.txt

# ---------- Final Stage ----------
# Stage 2: Final image
FROM python:3.9.23-alpine3.22
EXPOSE 8080
WORKDIR /opt/server
# Runtime dependencies only
RUN apk add --no-cache pcre
# Create app user
RUN addgroup -S roboshop && adduser -S roboshop -G roboshop
USER roboshop
# Copy installed Python packages from builder
COPY --from=builder /install /usr/local
# Copy application code
COPY --chown=roboshop:roboshop payment.ini .
COPY --chown=roboshop:roboshop *.py .
CMD ["uwsgi", "--ini", "payment.ini"]





# FROM python:3.9.23-alpine3.22
# WORKDIR /opt/server
# EXPOSE 8080
# RUN addgroup -S roboshop && adduser -S roboshop -G roboshop
# USER roboshop
# # Copy installed python packages from builder
# COPY --from=builder /install /usr/local
# # Copy source code
# COPY --chown=roboshop:roboshop payment.ini . 
# COPY --chown=roboshop:roboshop *.py .

# CMD ["uwsgi", "--ini", "payment.ini"]









# FROM python:3.9.23-alpine3.22
# EXPOSE 8080
# WORKDIR /opt/server
# COPY requirements.txt . 
# COPY *.py  . 
# COPY payment.ini .
# RUN addgroup -S roboshop && adduser -S roboshop -G roboshop \
#     && chown -R roboshop:roboshop /opt/server
# # RUN apk add --no-cache gcc musl-dev libgcc libstdc++ python3-dev
# RUN apk add --no-cache python3-dev build-base linux-headers pcre-dev
# RUN pip3 install -r requirements.txt
# CMD ["uwsgi", "--ini", "payment.ini"]


# FROM python:3.9
# EXPOSE 8080
# WORKDIR /opt/server
# COPY requirements.txt .
# COPY *.py  .
# COPY payment.ini .
# RUN pip3 install -r requirements.txt
# #ENV is mentioned in docker-compose.yaml
# CMD ["uwsgi", "--ini", "payment.ini"]
